{"version":3,"file":"fixed-double-script.js","mappings":"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","sources":["webpack://readium-js/./src/fixed/page-manager.ts","webpack://readium-js/./src/util/viewport.ts","webpack://readium-js/./src/common/gestures.ts","webpack://readium-js/./src/fixed/double-area-manager.ts","webpack://readium-js/./src/util/fit.ts","webpack://readium-js/./src/bridge/fixed-gestures-bridge.ts","webpack://readium-js/./src/index-fixed-double.ts","webpack://readium-js/./src/bridge/fixed-double-bridge.ts"],"sourcesContent":["/** Manages a fixed layout resource embedded in an iframe. */\nexport class PageManager {\n    constructor(window, iframe, listener) {\n        this.margins = { top: 0, right: 0, bottom: 0, left: 0 };\n        if (!iframe.contentWindow) {\n            throw Error(\"Iframe argument must have been attached to DOM.\");\n        }\n        this.listener = listener;\n        this.iframe = iframe;\n    }\n    setMessagePort(messagePort) {\n        messagePort.onmessage = (message) => {\n            this.onMessageFromIframe(message);\n        };\n    }\n    show() {\n        this.iframe.style.display = \"unset\";\n    }\n    hide() {\n        this.iframe.style.display = \"none\";\n    }\n    /** Sets page margins. */\n    setMargins(margins) {\n        if (this.margins == margins) {\n            return;\n        }\n        this.iframe.style.marginTop = this.margins.top + \"px\";\n        this.iframe.style.marginLeft = this.margins.left + \"px\";\n        this.iframe.style.marginBottom = this.margins.bottom + \"px\";\n        this.iframe.style.marginRight = this.margins.right + \"px\";\n    }\n    /** Loads page content. */\n    loadPage(url) {\n        this.iframe.src = url;\n    }\n    /** Sets the size of this page without content. */\n    setPlaceholder(size) {\n        this.iframe.style.visibility = \"hidden\";\n        this.iframe.style.width = size.width + \"px\";\n        this.iframe.style.height = size.height + \"px\";\n        this.size = size;\n    }\n    onMessageFromIframe(event) {\n        const message = event.data;\n        switch (message.kind) {\n            case \"contentSize\":\n                return this.onContentSizeAvailable(message.size);\n            case \"tap\":\n                return this.listener.onTap({ x: message.x, y: message.y });\n            case \"linkActivated\":\n                return this.onLinkActivated(message);\n        }\n    }\n    onLinkActivated(message) {\n        try {\n            const url = new URL(message.href, this.iframe.src);\n            this.listener.onLinkActivated(url.toString(), message.outerHtml);\n        }\n        catch (_a) {\n            // Do nothing if url is not valid.\n        }\n    }\n    onContentSizeAvailable(size) {\n        if (!size) {\n            //FIXME: handle edge case\n            return;\n        }\n        this.iframe.style.width = size.width + \"px\";\n        this.iframe.style.height = size.height + \"px\";\n        this.size = size;\n        this.listener.onIframeLoaded();\n    }\n}\n","export class ViewportStringBuilder {\n    setInitialScale(scale) {\n        this.initialScale = scale;\n        return this;\n    }\n    setMinimumScale(scale) {\n        this.minimumScale = scale;\n        return this;\n    }\n    setWidth(width) {\n        this.width = width;\n        return this;\n    }\n    setHeight(height) {\n        this.height = height;\n        return this;\n    }\n    build() {\n        const components = [];\n        if (this.initialScale) {\n            components.push(\"initial-scale=\" + this.initialScale);\n        }\n        if (this.minimumScale) {\n            components.push(\"minimum-scale=\" + this.minimumScale);\n        }\n        if (this.width) {\n            components.push(\"width=\" + this.width);\n        }\n        if (this.height) {\n            components.push(\"height=\" + this.height);\n        }\n        return components.join(\", \");\n    }\n}\nexport function parseViewportString(viewportString) {\n    const regex = /(\\w+) *= *([^\\s,]+)/g;\n    const properties = new Map();\n    let match;\n    while ((match = regex.exec(viewportString))) {\n        if (match != null) {\n            properties.set(match[1], match[2]);\n        }\n    }\n    const width = parseFloat(properties.get(\"width\"));\n    const height = parseFloat(properties.get(\"height\"));\n    if (width && height) {\n        return { width, height };\n    }\n    else {\n        return undefined;\n    }\n}\n","export class GesturesDetector {\n    constructor(window, listener) {\n        this.window = window;\n        this.listener = listener;\n        document.addEventListener(\"click\", (event) => {\n            this.onClick(event);\n        }, false);\n    }\n    onClick(event) {\n        if (event.defaultPrevented) {\n            return;\n        }\n        const selection = this.window.getSelection();\n        if (selection && selection.type == \"Range\") {\n            // There's an on-going selection, the tap will dismiss it so we don't forward it.\n            // selection.type might be None (collapsed) or Caret with a collapsed range\n            // when there is not true selection.\n            return;\n        }\n        let nearestElement;\n        if (event.target instanceof HTMLElement) {\n            nearestElement = this.nearestInteractiveElement(event.target);\n        }\n        else {\n            nearestElement = null;\n        }\n        if (nearestElement) {\n            if (nearestElement instanceof HTMLAnchorElement) {\n                this.listener.onLinkActivated(nearestElement.href, nearestElement.outerHTML);\n            }\n        }\n        else {\n            this.listener.onTap(event);\n        }\n        event.stopPropagation();\n        event.preventDefault();\n    }\n    // See. https://github.com/JayPanoz/architecture/tree/touch-handling/misc/touch-handling\n    nearestInteractiveElement(element) {\n        if (element == null) {\n            return null;\n        }\n        const interactiveTags = [\n            \"a\",\n            \"audio\",\n            \"button\",\n            \"canvas\",\n            \"details\",\n            \"input\",\n            \"label\",\n            \"option\",\n            \"select\",\n            \"submit\",\n            \"textarea\",\n            \"video\",\n        ];\n        if (interactiveTags.indexOf(element.nodeName.toLowerCase()) != -1) {\n            return element;\n        }\n        // Checks whether the element is editable by the user.\n        if (element.hasAttribute(\"contenteditable\") &&\n            element.getAttribute(\"contenteditable\").toLowerCase() != \"false\") {\n            return element;\n        }\n        // Checks parents recursively because the touch might be for example on an <em> inside a <a>.\n        if (element.parentElement) {\n            return this.nearestInteractiveElement(element.parentElement);\n        }\n        return null;\n    }\n}\n","import { computeScale } from \"../util/fit\";\nimport { PageManager } from \"./page-manager\";\nimport { ViewportStringBuilder } from \"../util/viewport\";\nimport { GesturesDetector } from \"../common/gestures\";\nexport class DoubleAreaManager {\n    constructor(window, leftIframe, rightIframe, metaViewport, listener) {\n        this.fit = \"contain\" /* Fit.Contain */;\n        this.insets = { top: 0, right: 0, bottom: 0, left: 0 };\n        window.addEventListener(\"message\", (event) => {\n            if (!event.ports[0]) {\n                return;\n            }\n            if (event.source === leftIframe.contentWindow) {\n                this.leftPage.setMessagePort(event.ports[0]);\n            }\n            else if (event.source == rightIframe.contentWindow) {\n                this.rightPage.setMessagePort(event.ports[0]);\n            }\n        });\n        const wrapperGesturesListener = {\n            onTap: (event) => {\n                const tapEvent = {\n                    x: (event.clientX - visualViewport.offsetLeft) *\n                        visualViewport.scale,\n                    y: (event.clientY - visualViewport.offsetTop) * visualViewport.scale,\n                };\n                listener.onTap(tapEvent);\n            },\n            // eslint-disable-next-line @typescript-eslint/no-unused-vars\n            onLinkActivated: (_) => {\n                throw Error(\"No interactive element in the root document.\");\n            },\n        };\n        new GesturesDetector(window, wrapperGesturesListener);\n        const leftPageListener = {\n            onIframeLoaded: () => {\n                this.layout();\n            },\n            onTap: (event) => {\n                const boundingRect = leftIframe.getBoundingClientRect();\n                const tapEvent = {\n                    x: (event.x + boundingRect.left - visualViewport.offsetLeft) *\n                        visualViewport.scale,\n                    y: (event.y + boundingRect.top - visualViewport.offsetTop) *\n                        visualViewport.scale,\n                };\n                listener.onTap(tapEvent);\n            },\n            onLinkActivated: (href, outerHtml) => {\n                listener.onLinkActivated(href, outerHtml);\n            },\n        };\n        const rightPageListener = {\n            onIframeLoaded: () => {\n                this.layout();\n            },\n            onTap: (event) => {\n                const boundingRect = rightIframe.getBoundingClientRect();\n                const tapEvent = {\n                    x: (event.x + boundingRect.left - visualViewport.offsetLeft) *\n                        visualViewport.scale,\n                    y: (event.y + boundingRect.top - visualViewport.offsetTop) *\n                        visualViewport.scale,\n                };\n                listener.onTap(tapEvent);\n            },\n            onLinkActivated: (href, outerHtml) => {\n                listener.onLinkActivated(href, outerHtml);\n            },\n        };\n        this.leftPage = new PageManager(window, leftIframe, leftPageListener);\n        this.rightPage = new PageManager(window, rightIframe, rightPageListener);\n        this.metaViewport = metaViewport;\n    }\n    loadSpread(spread) {\n        this.leftPage.hide();\n        this.rightPage.hide();\n        this.spread = spread;\n        if (spread.left) {\n            this.leftPage.loadPage(spread.left);\n        }\n        if (spread.right) {\n            this.rightPage.loadPage(spread.right);\n        }\n    }\n    setViewport(size, insets) {\n        if (this.viewport == size && this.insets == insets) {\n            return;\n        }\n        this.viewport = size;\n        this.insets = insets;\n        this.layout();\n    }\n    setFit(fit) {\n        if (this.fit == fit) {\n            return;\n        }\n        this.fit = fit;\n        this.layout();\n    }\n    layout() {\n        if (!this.viewport ||\n            (!this.leftPage.size && this.spread.left) ||\n            (!this.rightPage.size && this.spread.right)) {\n            return;\n        }\n        const leftMargins = {\n            top: this.insets.top,\n            right: 0,\n            bottom: this.insets.bottom,\n            left: this.insets.left,\n        };\n        this.leftPage.setMargins(leftMargins);\n        const rightMargins = {\n            top: this.insets.top,\n            right: this.insets.right,\n            bottom: this.insets.bottom,\n            left: 0,\n        };\n        this.rightPage.setMargins(rightMargins);\n        if (!this.spread.right) {\n            this.rightPage.setPlaceholder(this.leftPage.size);\n        }\n        else if (!this.spread.left) {\n            this.leftPage.setPlaceholder(this.rightPage.size);\n        }\n        const contentWidth = this.leftPage.size.width + this.rightPage.size.width;\n        const contentHeight = Math.max(this.leftPage.size.height, this.rightPage.size.height);\n        const contentSize = { width: contentWidth, height: contentHeight };\n        const safeDrawingSize = {\n            width: this.viewport.width - this.insets.left - this.insets.right,\n            height: this.viewport.height - this.insets.top - this.insets.bottom,\n        };\n        const scale = computeScale(this.fit, contentSize, safeDrawingSize);\n        this.metaViewport.content = new ViewportStringBuilder()\n            .setInitialScale(scale)\n            .setMinimumScale(scale)\n            .setWidth(contentWidth)\n            .setHeight(contentHeight)\n            .build();\n        this.leftPage.show();\n        this.rightPage.show();\n    }\n}\n","export function computeScale(fit, content, container) {\n    switch (fit) {\n        case \"contain\" /* Fit.Contain */:\n            return fitContain(content, container);\n        case \"width\" /* Fit.Width */:\n            return fitWidth(content, container);\n        case \"height\" /* Fit.Height */:\n            return fitHeight(content, container);\n    }\n}\nfunction fitContain(content, container) {\n    const widthRatio = container.width / content.width;\n    const heightRatio = container.height / content.height;\n    return Math.min(widthRatio, heightRatio);\n}\nfunction fitWidth(content, container) {\n    return container.width / content.width;\n}\nfunction fitHeight(content, container) {\n    return container.height / content.height;\n}\n","export class BridgeGesturesAdapter {\n    constructor(gesturesApi) {\n        this.nativeApi = gesturesApi;\n    }\n    onTap(event) {\n        this.nativeApi.onTap(JSON.stringify(event));\n    }\n    onLinkActivated(href, outerHtml) {\n        this.nativeApi.onLinkActivated(href, outerHtml);\n    }\n}\n","//\n//  Copyright 2024 Readium Foundation. All rights reserved.\n//  Use of this source code is governed by the BSD-style license\n//  available in the top-level LICENSE file of the project.\n//\nimport { FixedDoubleBridge } from \"./bridge/fixed-double-bridge\";\nconst leftIframe = document.getElementById(\"page-left\");\nconst rightIframe = document.getElementById(\"page-right\");\nconst metaViewport = document.querySelector(\"meta[name=viewport]\");\nWindow.prototype.doubleArea = new FixedDoubleBridge(window, leftIframe, rightIframe, metaViewport, window.gestures);\nwindow.initialization.onScriptsLoaded();\n","import { DoubleAreaManager } from \"../fixed/double-area-manager\";\nimport { BridgeGesturesAdapter } from \"./fixed-gestures-bridge\";\nexport class FixedDoubleBridge {\n    constructor(window, leftIframe, rightIframe, metaViewport, gestures) {\n        const listener = new BridgeGesturesAdapter(gestures);\n        this.manager = new DoubleAreaManager(window, leftIframe, rightIframe, metaViewport, listener);\n    }\n    loadSpread(spread) {\n        this.manager.loadSpread(spread);\n    }\n    setViewport(viewporttWidth, viewportHeight, insetTop, insetRight, insetBottom, insetLeft) {\n        const viewport = { width: viewporttWidth, height: viewportHeight };\n        const insets = {\n            top: insetTop,\n            left: insetLeft,\n            bottom: insetBottom,\n            right: insetRight,\n        };\n        this.manager.setViewport(viewport, insets);\n    }\n    setFit(fit) {\n        if (fit != \"contain\" && fit != \"width\" && fit != \"height\") {\n            throw Error(`Invalid fit value: ${fit}`);\n        }\n        this.manager.setFit(fit);\n    }\n}\n"],"names":["PageManager","constructor","window","iframe","listener","this","margins","top","right","bottom","left","contentWindow","Error","setMessagePort","messagePort","onmessage","message","onMessageFromIframe","show","style","display","hide","setMargins","marginTop","marginLeft","marginBottom","marginRight","loadPage","url","src","setPlaceholder","size","visibility","width","height","event","data","kind","onContentSizeAvailable","onTap","x","y","onLinkActivated","URL","href","toString","outerHtml","_a","onIframeLoaded","ViewportStringBuilder","setInitialScale","scale","initialScale","setMinimumScale","minimumScale","setWidth","setHeight","build","components","push","join","GesturesDetector","document","addEventListener","onClick","defaultPrevented","selection","getSelection","type","nearestElement","target","HTMLElement","nearestInteractiveElement","HTMLAnchorElement","outerHTML","stopPropagation","preventDefault","element","indexOf","nodeName","toLowerCase","hasAttribute","getAttribute","parentElement","DoubleAreaManager","leftIframe","rightIframe","metaViewport","fit","insets","ports","source","leftPage","rightPage","tapEvent","clientX","visualViewport","offsetLeft","clientY","offsetTop","_","leftPageListener","layout","boundingRect","getBoundingClientRect","rightPageListener","loadSpread","spread","setViewport","viewport","setFit","leftMargins","rightMargins","contentWidth","contentHeight","Math","max","contentSize","safeDrawingSize","content","container","widthRatio","heightRatio","min","fitContain","fitWidth","fitHeight","computeScale","BridgeGesturesAdapter","gesturesApi","nativeApi","JSON","stringify","getElementById","querySelector","Window","prototype","doubleArea","gestures","manager","viewporttWidth","viewportHeight","insetTop","insetRight","insetBottom","insetLeft","initialization","onScriptsLoaded"],"sourceRoot":""}